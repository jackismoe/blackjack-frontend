[{"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/index.js":"1","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/appReducer.js":"2","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Bets.jsx":"3","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Game.jsx":"4","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Nav.jsx":"5","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Footer.jsx":"6","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Login.jsx":"7","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Signup.jsx":"8","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/actions/fetchPlayer.js":"9","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/LoadGame.jsx":"10","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/actions/buildDeck.js":"11"},{"size":1120,"mtime":1611247119735,"results":"12","hashOfConfig":"13"},{"size":370,"mtime":1611602795021,"results":"14","hashOfConfig":"13"},{"size":154,"mtime":1611009232134,"results":"15","hashOfConfig":"13"},{"size":4421,"mtime":1611682388308,"results":"16","hashOfConfig":"13"},{"size":326,"mtime":1611685136904,"results":"17","hashOfConfig":"13"},{"size":225,"mtime":1611683135144,"results":"18","hashOfConfig":"13"},{"size":1477,"mtime":1611248036202,"results":"19","hashOfConfig":"13"},{"size":1563,"mtime":1611248047840,"results":"20","hashOfConfig":"13"},{"size":331,"mtime":1611244409486,"results":"21","hashOfConfig":"13"},{"size":828,"mtime":1611424376212,"results":"22","hashOfConfig":"13"},{"size":4574,"mtime":1611616310495,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9y5jjq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/index.js",[],["49","50"],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/appReducer.js",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Bets.jsx",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Game.jsx",["51","52","53","54","55","56","57"],"import React from 'react'\nimport {connect} from 'react-redux'\n\nclass Game extends React.Component {\n  startGame = () => {\n    let sortedDeck\n    let cardsInDeck\n    let playerTotal\n    let dealerTotal\n    const dealerHand = []\n    const playerHand = []\n\n    const sortDeck = () => {  \n      sortedDeck = this.props.deck.filter(card => card.dealt == false)\n      cardsInDeck = sortedDeck.length\n    }\n\n    const resetDeck = () => {\n      this.props.deck.map(card => card.dealt = false)\n    }\n\n    // first shuffle   \n    sortDeck()\n\n    const dealFirstTwo = (hand) => {\n      const index = Math.floor(Math.random() * cardsInDeck)\n      const card = sortedDeck.find((card, idx) => idx == index)\n      card.dealt = true\n      sortDeck()\n      hand.push(card)\n\n      if (hand.length < 2) {\n        dealFirstTwo(hand)\n      }\n    }\n\n    const dealOne = (hand) => {\n      const index = Math.floor(Math.random() * cardsInDeck)\n      const card = sortedDeck.find((card, idx) => idx == index)\n      card.dealt = true\n      sortDeck()\n      hand.push(card)\n    }\n\n    const getTotal = (hand) => {\n      let workingTotal = 0\n      for (let card of hand) {\n        workingTotal += card.value\n      }\n      return workingTotal\n    }\n\n    const playerTurn = () => {\n      if (playerTotal > 21) {\n        alert(`you've busted`)\n        dealersTurn(dealerTotal, dealerHand)\n      } else {\n        const playerHit = window.confirm(`your total right now is ${playerTotal}. Would you like to hit?`)\n        if (playerHit) {\n          dealOne(playerHand)\n          playerTotal = getTotal(playerHand)\n          playerTurn()\n        } else {\n          dealersTurn(dealerTotal, dealerHand)\n        }\n      }\n    }\n\n    const dealersTurn = (total, hand) => {\n      if (playerTotal > 21) {\n        seeWhoWon()\n      } else {\n        if (total < 17) {\n          dealOne(hand)\n          dealerTotal = getTotal(dealerHand)\n          dealersTurn(dealerTotal, hand)\n        } else if (total > 21) {\n          alert('dealer has busted')\n          seeWhoWon()\n        } else {\n          seeWhoWon()\n        }\n      }\n    }\n\n    const seeWhoWon = () => {\n      let winner\n\n      if ((playerTotal > dealerTotal) && (playerTotal <= 21) || (dealerTotal > 21)) {\n        winner = 'player'\n      } else if ((dealerTotal > playerTotal) && (dealerTotal <= 21) || (playerTotal > 21)) {\n        winner = 'dealer'\n      }\n      \n      alert(`playerTotal is ${playerTotal}.\\ndealertotal is ${dealerTotal}.\\n${winner} has won.`)\n      resetDeck()\n    }\n\n    dealFirstTwo(playerHand)\n    dealFirstTwo(dealerHand)\n    playerTotal = getTotal(playerHand)\n    dealerTotal = getTotal(dealerHand)\n    playerTurn()\n    \n\n\n    // show cards on board\n    // const playerCardOneDOM = document.querySelector('.playerCardOne')\n    // const playerCardTwoDOM = document.querySelector('.playerCardTwo')\n    // const dealerCardOneDOM = document.querySelector('.dealerCardOne')\n\n    // playerCardOneDOM.style.backgroundImage = `url(../images/${playerHand[0].name}.png)`\n    // playerCardTwoDOM.style.backgroundImage = `url(../images/${playerHand[1].name}.png)`\n    // dealerCardOneDOM.style.backgroundImage = `url(../images/${dealerHand[0].name}.png)`\n  }\n\n  render() {\n\n    return (\n      <div className='game'>\n        <div className='player'>\n          <div className='playerCardOne'>\n\n          </div>\n          <div className='playerCardTwo'>\n\n          </div>\n          <div className='dealtCards'>\n            \n          </div>\n        </div>\n        <div className='dealer'>\n          <div className='dealerCardOne'>\n\n          </div>\n          <div className='dealerCardTwo'>\n\n          </div>\n          <div className='dealtCards'>\n            \n          </div>\n        </div>\n        <div className='bets'>\n          <div className='userBet'>\n            <select>\n              <option>10</option>\n              <option>25</option>\n              <option>50</option>\n              <option>100</option>\n              <option>500</option>\n            </select>            \n          </div>\n          <div className='dealerBet'>\n            <select>\n              \n            </select>\n          </div>\n        </div>\n        <button className='deal' onClick={() => this.startGame()}>Deal</button>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    player: state.player,\n    deck: state.deck\n  }\n}\n\nexport default connect(mapStateToProps, null)(Game)","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Nav.jsx",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Footer.jsx",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Login.jsx",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/Signup.jsx",["58"],"import React from 'react'\nimport BASE_URL from '../index'\nimport {Link} from 'react-router-dom'\n\nexport default class Login extends React.Component {\n\n  handleSubmit = event => {\n    event.preventDefault()\n    if (event.target[1].value == event.target[2].value) {\n      const createPlayer = (player) => {\n        fetch(`${BASE_URL}/users`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            player: player\n          })\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n          // deal with player\n          sessionStorage.setItem('userId', jsonResponse.id)\n          sessionStorage.setItem('username', jsonResponse.username)\n          this.props.history.push('/loading')\n        })\n      }\n      const player = {\n        name: event.target[0].value,\n        password: event.target[1].value\n      }\n      createPlayer(player)\n    } else {\n      document.querySelector('.signup').reset()\n      alert('Check your inputs :)')\n    }\n\n  }\n\n  render() {\n    return (\n      <>\n        <form className='signup' onSubmit={this.handleSubmit}>\n          <label>Username or Email</label><br/>\n          <input type='text'/><br/>\n          <label>Password</label><br/>\n          <input type='password'/><br/>\n          <label>Confirm Password</label><br/>\n          <input type='password'/><br/>\n          <input type='submit'/>\n          <br/>\n          <br/>\n          <Link to='/'>Log In</Link>\n        </form>\n      </>\n    )\n  }\n}","/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/actions/fetchPlayer.js",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/components/LoadGame.jsx",[],"/Users/jack/Dev/FlatironProjects/blackjack/blackjack-frontend/src/actions/buildDeck.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":14,"column":62,"nodeType":"65","messageId":"66","endLine":14,"endColumn":64},{"ruleId":"63","severity":1,"message":"64","line":27,"column":55,"nodeType":"65","messageId":"66","endLine":27,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":39,"column":55,"nodeType":"65","messageId":"66","endLine":39,"endColumn":57},{"ruleId":"67","severity":1,"message":"68","line":89,"column":39,"nodeType":"69","messageId":"70","endLine":89,"endColumn":41},{"ruleId":"67","severity":1,"message":"68","line":89,"column":62,"nodeType":"69","messageId":"70","endLine":89,"endColumn":64},{"ruleId":"67","severity":1,"message":"68","line":91,"column":46,"nodeType":"69","messageId":"70","endLine":91,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":91,"column":69,"nodeType":"69","messageId":"70","endLine":91,"endColumn":71},{"ruleId":"63","severity":1,"message":"64","line":9,"column":31,"nodeType":"65","messageId":"66","endLine":9,"endColumn":33},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]